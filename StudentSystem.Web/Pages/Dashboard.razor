@page "/"
@using StudentSystem.Domain.Entities
@using StudentSystem.Web.Services
@inject StudentApiService StudentService

<PageTitle>Dashboard</PageTitle>

<h1>Student System Dashboard</h1>

<div class="row mt-4">
    <div class="col-md-3">
        <div class="card text-white bg-primary mb-3">
            <div class="card-header">Total Students</div>
            <div class="card-body">
                <h2 class="card-title">@totalStudents</h2>
                <p class="card-text">Registered in system</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-success mb-3">
            <div class="card-header">Active Students</div>
            <div class="card-body">
                <h2 class="card-title">@activeStudents</h2>
                <p class="card-text">Currently enrolled</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-info mb-3">
            <div class="card-header">Average GPA</div>
            <div class="card-body">
                <h2 class="card-title">@averageGpa.ToString("F2")</h2>
                <p class="card-text">Cumulative average</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-warning mb-3">
            <div class="card-header">Dean's List</div>
            <div class="card-body">
                <h2 class="card-title">@deansListCount</h2>
                <p class="card-text">High achievers</p>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-secondary text-white">
                <h5>Quick Actions</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a href="/students" class="btn btn-primary btn-lg">
                        <span class="oi oi-people"></span> View All Students
                    </a>
                    <a href="/classes" class="btn btn-info btn-lg">
                        <span class="oi oi-book"></span> View Class Schedules
                    </a>
                    <a href="/assignments" class="btn btn-success btn-lg">
                        <span class="oi oi-task"></span> Manage Assignments
                    </a>
                    <a href="/applications" class="btn btn-warning btn-lg">
                        <span class="oi oi-document"></span> Grader Applications
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-secondary text-white">
                <h5>System Status</h5>
            </div>
            <div class="card-body">
                @if (loading)
                {
                    <div class="text-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else
                {
                    <ul class="list-group">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            API Connection
                            <span class="badge bg-success rounded-pill">Connected</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Database
                            <span class="badge bg-success rounded-pill">Online</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Last Updated
                            <span class="badge bg-info rounded-pill">Just now</span>
                        </li>
                    </ul>

                    <div class="mt-3">
                        <h6>Top Programs</h6>
                        @if (topPrograms.Any())
                        {
                            <ul class="list-group">
                                @foreach (var program in topPrograms.Take(5))
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        @program.Key
                                        <span class="badge bg-primary rounded-pill">@program.Value</span>
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private int totalStudents = 0;
    private int activeStudents = 0;
    private double averageGpa = 0.0;
    private int deansListCount = 0;
    private List<StudentLookup> students = new();
    private Dictionary<string, int> topPrograms = new();
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        loading = true;
        students = await StudentService.GetAllStudentsAsync();

        if (students.Any())
        {
            totalStudents = students.Count;
            activeStudents = students.Count(s => s.Prog_Status == "AC");
            averageGpa = students.Average(s => s.Cumulative_GPA);
            deansListCount = students.Count(s => s.Deans_List == "Y");

            topPrograms = students
                .GroupBy(s => s.Acad_Prog_Descr)
                .OrderByDescending(g => g.Count())
                .ToDictionary(g => g.Key, g => g.Count());
        }

        loading = false;
    }
}
